# $schema: https://json.schemastore.org/github-workflow.json

name: Maven release

on:
  workflow_call:
    inputs:
      releaseVersion:
        description: "Release version"
        required: true
        type: string
      dependencies:
        description: "Dependencies to update in format: 'groupId:artifactId:version,groupId:artifactId:version'"
        required: false
        type: string
    secrets:
      GITHUB_TOKEN:
        description: "token"
        required: true

jobs:
  release:
    permissions:
      contents: write
      packages: write
      pull-requests: write

    runs-on: ubuntu-latest
    env:
      MAVEN_USER: ${{ secrets.MAVEN_USER }}
      MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          server-id: github
#          server-username: MAVEN_USER
#          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Display m2/settings.xml
        run: cat ~/.m2/settings.xml

      - name: Print env
        run: printenv

      - name: Set up Git
        run: |
          git config user.email "actions@github.com"
          git config user.name "actions"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Display git config
        run: git config --list

      - name: Update dependencies
        if: ${{ inputs.dependencies != '' }}
        run: mvn -B versions:use-dep-version -DincludesList=${{ inputs.includesList }}

      - name: Release
        run: |-
          mvn -B release:prepare -Dresume=false -DautoVersionSubmodules=true -DreleaseVersion=${{ inputs.releaseVersion }} release:perform -DlocalCheckout=true

      - name: Rollback
        if: failure()
        run: mvn -B release:rollback
