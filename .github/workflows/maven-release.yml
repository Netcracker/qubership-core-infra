# $schema: https://json.schemastore.org/github-workflow.json

name: Maven release

on:
  workflow_call:
    inputs:
      releaseVersion:
        description: "Release version"
        required: false
        type: string
      dependencies:
        description: |-
          Dependencies to update in format:
          <groupId>:<artifactId>:<version>
          <groupId>:<artifactId>:<version>
        required: false
        type: string
      gavs-cache-path:
        type: string
        description: "Cache path of Shared bulk release GAV file"
        default: "output"
      gavs-cache-key:
        type: string
        description: "Cache key of Shared bulk release GAV file"
        default: ""
    secrets:
      maven-token:
        description: "Maven token"
        required: true
      maven-gpg-private-key:
        description: "Maven gpg-private-key"
        required: true
      maven-gpg-passphrase:
        description: "Maven gpg-passphrase"
        required: true

jobs:
  release:
    permissions:
      contents: write
      packages: write

    runs-on: ubuntu-latest
    env:
      MAVEN_USER: "x-access-token"
      MAVEN_TOKEN: ${{ secrets.maven-token }}
      MAVEN_GPG_PASSPHRASE: ${{ secrets.maven-gpg-passphrase }}

    outputs:
      gavs: ${{ steps.release.outputs.gavs }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore GAV cache
        if: ${{ inputs.gavs-cache-key != '' }}
        uses: actions/cache@v4
        with:
          path: ${{ inputs.gavs-cache-path }}
          key: ${{ inputs.gavs-cache-key }}

      - name: Create files
        if: ${{ inputs.gavs-cache-key == '' }}
        # language="shell script"
        run: |-
          mkdir -p output
          echo "" > output/gavs.txt

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          server-id: github
          server-username: MAVEN_USER
          server-password: MAVEN_TOKEN
          gpg-private-key: ${{ secrets.maven-gpg-private-key }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Set up Git
        # language="shell script"
        run: |-
          git config user.email "actions@github.com"
          git config user.name "actions"
          git remote set-url origin https://x-access-token:${{ secrets.MAVEN_TOKEN }}@github.com/${{ github.repository }}

      - name: Display git config
        run: git config --list

      - name: Update dependencies
        id: update
        if: ${{ inputs.dependencies != '' }}
        # language="shell script"
        run: |-
          set -x
          dependencies="${{ inputs.dependencies }}"
          IFS=$'\n'
          for line in $dependencies; do
            IFS=":"
            read -r groupID artifactId version <<< "$line"
            ga="$groupID:$artifactId"
            cmd="mvn -B versions:use-dep-version -Dincludes=$ga -DdepVersion=$version"
            eval "$cmd"
            cmd="mvn -B versions:update-properties -Dincludes=$ga -Dmaven.version.ignore=^\(?!$version\).+\$"
            eval "$cmd"
          done
          changed=$(git diff --quiet)
          if [ "$changed" -eq 0 ]; then
            git add -u
            git commit -m 'updating dependencies before release'
          fi

      - name: Release
        id: release
        if: ${{ success() }}
        # language="shell script"
        run: |-
          set -x
          mvn -B release:prepare -Dresume=false -DautoVersionSubmodules=true -DreleaseVersion=${{ inputs.releaseVersion }}
          gavs=`cat 'release.properties' | grep 'project.rel.' | sed 's/project.rel.//g' | sed 's/\\\\//g' | sed 's/=/:/g'`
          echo "$gavs" >> "${{ inputs.gavs-cache-path }}/gavs.txt"
          echo "### Release artifacts:\n" >> $GITHUB_STEP_SUMMARY
          echo "$gavs" >> $GITHUB_STEP_SUMMARY
          mvn -B release:perform -DlocalCheckout=true

      - name: Rollback release
        if: ${{ failure() }}
        run: mvn -B release:rollback
