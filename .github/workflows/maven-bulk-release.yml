# $schema: https://raw.githubusercontent.com/SchemaStore/schemastore/refs/heads/master/src/schemas/json/github-workflow.json

name: "Maven bulk release"

on:
  workflow_dispatch:
    inputs:
      java-version:
        description: "java-version to use in 'setup-java' action for 'temurin' distribution"
        type: string
        default: "21"
      repositories:
        description: |-
          Repositories to release as comma seperated list:
          Netcracker/repository-1,Netcracker/repository-2,Netcracker/repository-3
        required: false
        type: string
        default: |-
          Netcracker/qubership-core-release-test-maven-lib-1,
          Netcracker/qubership-core-release-test-maven-lib-2,
          Netcracker/qubership-core-release-test-maven-lib-3
      maven-envs:
        description: "Envs in format 'env1=val1,env2=val2' for mvn release plugin. Used for testing"
        type: string

#      type:
#        description: "Version part to increment"
#        type: choice
#        options:
#          - patch
#          - minor
#          - major
#        default: patch

permissions:
  actions: write
  contents: write
  packages: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      MAVEN_USER: "x-access-token"
      MAVEN_TOKEN: ${{ secrets.maven-token }}
      MAVEN_GPG_PASSPHRASE: ${{ secrets.maven-gpg-passphrase }}
    outputs:
      repositories: ${{ steps.format-repositories.outputs.json }}

    steps:
      - name: Create shared GAVs file
        run: touch gavs.txt

      - name: Upload clean gavs artifact
        uses: actions/upload-artifact@v4
        with:
          name: "gavs-${{ github.run_id }}"
          path: gavs.txt
          overwrite: true

      - name: Format repositories
        id: format-repositories
        shell: bash
        env:
          REPOSITORIES: ${{ inputs.repositories }}
        # language="shell script"
        run: |
          set -x
          json=""
          IFS=','
          for repository in ${REPOSITORIES}; do
            if [ -z "${repository}" ]; then
              continue
            fi
            if [ -n "${json}" ]; then
              json="${json},"
            fi
            json="${json}"'"'"${repository}"'"'
          done
          json="[${json}]"
          echo "json=${json}"
          echo "json=${json}" >> "$GITHUB_OUTPUT"

  release:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: ${{ fromJson(needs.prepare.outputs.repositories) }}
      max-parallel: 1
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: '${{ github.repository }}'
          ref: "main"

      - name: Format repository name
        id: format-repo-name
        shell: bash
        # language="shell script"
        run: |
          set -x
          repo="${{ matrix.repository }}"
          repo=$(echo "$repo" | tr '/' '_')
          echo "repo=${repo}" >> "$GITHUB_OUTPUT"

      - name: "Run '${{ matrix.repository }}' repository release"
        uses: "./.github/actions/maven-release"
        with:
          run-id: "${{ github.run_id }}"
          repository: "${{ matrix.repository }}"
          directory: "${{ matrix.repository }}"
          java-version: ${{ inputs.java-version }}
          artifact-name: "gavs-${{ github.run_id }}"
          backup-artifact-name: "release-backup-${{ github.run_id }}-${{ steps.format-repo-name.outputs.repo }}"
          maven-envs: ${{ inputs.maven-envs }}
          maven-token: ${{ secrets.MAVEN_RELEASE_DEV_TOKEN }}
          maven-gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          maven-gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

  rollback:
    needs: release
    runs-on: ubuntu-latest
    if: failure()
    strategy:
      matrix:
        repository: ${{ fromJson(inputs.repositories) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: '${{ github.repository }}'
          ref: "main"

      - name: Format repository name
        id: format-repo-name
        shell: bash
        # language="shell script"
        run: |
          set -x
          repo="${{ matrix.repository }}"
          repo=$(echo "$repo" | tr '/' '_')
          echo "repo=${repo}" >> "$GITHUB_OUTPUT"

      - name: "Run '${{ matrix.repository }}' repository release rollback"
        uses: "./.github/actions/maven-release-rollback"
        with:
          run-id: "${{ github.run_id }}"
          repository: "${{ matrix.repository }}"
          directory: "${{ matrix.repository }}"
          java-version: ${{ inputs.java-version }}
          artifact-name: "gavs-${{ github.run_id }}"
          backup-artifact-name: "release-backup-${{ github.run_id }}-${{ steps.format-repo-name.outputs.repo }}"
          maven-token: ${{ secrets.MAVEN_RELEASE_DEV_TOKEN }}
          maven-gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          maven-gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
