# Build Go Service Workflow
#
# Purpose:
#   A reusable workflow for building Go services with SonarCloud code analysis
#   and Docker image publishing. Can be invoked from other workflows (workflow_call).
#
# Inputs:
#   sonar-project-key – SonarCloud project key
#   go-module-dir     – Directory containing go.mod (optional, if not provided, go.mod will be searched in the repo).
#   actor             – GitHub actor (user or bot) that triggered the workflow (required).
#
# Secrets:
#   sonar-token – Token for accessing SonarCloud (required).
#
# Workflow logic:
#   1. pr-check:
#      Detects if there is an open Pull Request for the current branch.
#   2. fast-exit-on-push-when-pr-exists:
#      If the event is "push" and an open PR exists – exits early,
#      delegating the work to the pull_request workflow.
#   3. build-with-sonar:
#      Runs Go build and SonarCloud analysis:
#        • on pull_request events, or
#        • on push events if no open PR exists.
#      Uses the shared workflow go-build-with-sonar from core-infra.
#   4. docker-build:
#      After a successful build, runs Docker image build
#      using the shared docker-build workflow from core-infra.

name: Build Go Service

on:
  workflow_call:
    inputs:
      sonar-project-key:
        description: 'Sonar project key for analysis. It must be specified explicitly, as the qubership-core-infra repository may have its own sonar-project-key. '
        required: false
        type: string
      go-module-dir:
        description: 'Optional directory containing go.mod file. If not specified, will search for go.mod files in the repository.'
        required: false
        type: string
      actor:
        description: 'GitHub actor (user or bot) that triggered the workflow'
        required: true
        type: string
      config-filename:
        description: 'Set name only or short path inside .github folder if required'
        required: false
        type: string
        default: 'docker-dev-config.json'
    secrets:
      sonar-token:
        required: true

concurrency:
  group: ci-${{ github.event_name }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  packages: write

jobs:
  pr-check:
    runs-on: ubuntu-latest
    outputs:
      hasOpenPr: ${{ steps.find.outputs.hasOpenPr }}
    steps:
      - id: find
        uses: actions/github-script@v7
        with:
          script: |
            const branch = process.env.GITHUB_HEAD_REF || process.env.GITHUB_REF_NAME;
            const owner  = context.repo.owner;
            const { data: prs } = await github.rest.pulls.list({
              owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${owner}:${branch}`,
              per_page: 1
            });
            core.notice(`Open PR on branch "${branch}": ${prs.length > 0}`);
            core.setOutput('hasOpenPr', prs.length > 0 ? 'true' : 'false');

  fast-exit-on-push-when-pr-exists:
    needs: pr-check
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && needs.pr-check.outputs.hasOpenPr == 'true' }}
    steps:
      - run: echo "PR exists for this branch -> work is delegated to pull_request workflow. Exiting."

  build-with-sonar:
    needs: [ pr-check ]
    if: ${{ github.event_name == 'pull_request' || needs.pr-check.outputs.hasOpenPr == 'false' }}
    uses: netcracker/qubership-core-infra/.github/workflows/go-build-with-sonar.yaml@v1.0.5
    with:
      actor: ${{ inputs.actor }}
      sonar-project-key: ${{ inputs.sonar-project-key }}
      go-module-dir: ${{ inputs.go-module-dir }}
    secrets:
      sonar-token: ${{ secrets.sonar-token }}

  check-docker-config:
    runs-on: ubuntu-latest
    outputs:
      hasDockerConfig: ${{ steps.check_config.outputs.hasDockerConfig }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Check config presence
        id: check_config
        run: |
          config_file="$GITHUB_WORKSPACE/.github/${{ inputs.config-filename }}"
          if [ -f "config_file" ]; then
            echo "hasDockerConfig=true" >> "$GITHUB_OUTPUT"
            echo "Found config_file"
          else
            echo "hasDockerConfig=false" >> "$GITHUB_OUTPUT"
            echo "::notice::Docker config is not found. Docker build will be skipped."
          fi

  docker-build:
    needs: [ build-with-sonar, check-docker-config ]
    if: ${{ needs.check-docker-config.outputs.hasDockerConfig == 'true' }}
    uses: netcracker/qubership-core-infra/.github/workflows/docker-build.yaml@v1.0.5
    with:
      dry-run: false
      config-filename: ${{ inputs.config-filename }}
